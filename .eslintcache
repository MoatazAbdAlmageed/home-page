[{"E:\\wuilt\\wuilt-home-page\\src\\reportWebVitals.js":"1","E:\\wuilt\\wuilt-home-page\\src\\index.js":"2","E:\\wuilt\\wuilt-home-page\\src\\components\\Repos.js":"3","E:\\wuilt\\wuilt-home-page\\src\\components\\VSCode.js":"4"},{"size":362,"mtime":1608743461151,"results":"5","hashOfConfig":"6"},{"size":687,"mtime":1608821009989,"results":"7","hashOfConfig":"6"},{"size":1856,"mtime":1608819141497,"results":"8","hashOfConfig":"6"},{"size":12755,"mtime":1608821135997,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oqn5v",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"E:\\wuilt\\wuilt-home-page\\src\\reportWebVitals.js",[],"E:\\wuilt\\wuilt-home-page\\src\\index.js",[],"E:\\wuilt\\wuilt-home-page\\src\\components\\Repos.js",["19","20","21","22","23"],"E:\\wuilt\\wuilt-home-page\\src\\components\\VSCode.js",["24"],"import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport VSCodeShortcuts from \"../data/vscode.json\";\nimport reactSnippets from \"../data/react-js-snippets.json\";\nexport default function VSCode() {\n  return (\n    <div>\n      <h1>Vscode most used shortcuts</h1>\n      <Table striped bordered hover>\n        <thead>\n          <th>Action</th>\n          <th>Shortcut</th>\n        </thead>\n        <tbody>\n          {VSCodeShortcuts.map(({ action, shortcut }) => {\n            return (\n              <tr>\n                <td>{action}</td>\n                <td>{shortcut}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <h1>React Snippets</h1>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Prefix</th>\n            <th>Method</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <code>imr→</code>\n            </td>\n            <td>\n              <code>{`import React from 'react'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrd→</code>\n            </td>\n            <td>\n              <code>{`import ReactDOM from 'react-dom'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrc→</code>\n            </td>\n            <td>\n              <code>{`import React, { Component } from 'react'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrcp→</code>\n            </td>\n            <td>\n              <code>\n                {`import React, { Component } from 'react' &amp; import PropTypes from 'prop-types'`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrpc→</code>\n            </td>\n            <td>\n              <code>{`import React, { PureComponent } from 'react'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrpcp→</code>\n            </td>\n            <td>\n              <code>\n                {`import React, { PureComponent } from 'react' &amp; import PropTypes from 'prop-types'`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrm→</code>\n            </td>\n            <td>\n              <code>{`import React, { memo } from 'react'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrmp→</code>\n            </td>\n            <td>\n              <code>\n                {`import React, { memo } from 'react' &amp; import PropTypes from 'prop-types'`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>impt→</code>\n            </td>\n            <td>\n              <code>{`import PropTypes from 'prop-types'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrr→</code>\n            </td>\n            <td>\n              <code>\n                {`import { BrowserRouter as Router, Route, NavLink} from 'react-router-dom'`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imbr→</code>\n            </td>\n            <td>\n              <code>\n                {`import { BrowserRouter as Router} from 'react-router-dom'`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imbrc→</code>\n            </td>\n            <td>\n              <code>\n                {`import { Route, Switch, NavLink, Link } from react-router-dom'`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imbrr→</code>\n            </td>\n            <td>\n              <code>{`import { Route } from 'react-router-dom'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imbrs→</code>\n            </td>\n            <td>\n              <code>{`import { Switch } from 'react-router-dom'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imbrl→</code>\n            </td>\n            <td>\n              <code>{`import { Link } from 'react-router-dom'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imbrnl→</code>\n            </td>\n            <td>\n              <code>{`import { NavLink } from 'react-router-dom'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrs→</code>\n            </td>\n            <td>\n              <code>{`import React, { useState } from 'react'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>imrse→</code>\n            </td>\n            <td>\n              <code>\n                {`import React, { useState, useEffect } from 'react'`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>redux→</code>\n            </td>\n            <td>\n              <code>{`import { connect } from 'react-redux'`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>rconst→</code>\n            </td>\n            <td>\n              <code>{`constructor(props) with this.state`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>rconc→</code>\n            </td>\n            <td>\n              <code>{`constructor(props, context) with this.state`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>est→</code>\n            </td>\n            <td>\n              <code>{`this.state = { }`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cwm→</code>\n            </td>\n            <td>\n              <code>{`componentWillMount = () =&gt;`}</code> DEPRECATED!!!\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cdm→</code>\n            </td>\n            <td>\n              <code>{`componentDidMount = () =&gt; `}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cwr→</code>\n            </td>\n            <td>\n              <code>{`componentWillReceiveProps = (nextProps) =&gt;`}</code>{\" \"}\n              DEPRECATED!!!\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>scu→</code>\n            </td>\n            <td>\n              <code>\n                {`shouldComponentUpdate = (nextProps, nextState) =&gt;`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cwup→</code>\n            </td>\n            <td>\n              <code>\n                {\" \"}\n                {`componentWillUpdate = (nextProps, nextState) =&gt;`}\n              </code>{\" \"}\n              DEPRECATED!!!\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cdup→</code>\n            </td>\n            <td>\n              <code>\n                {\" \"}\n                {`componentDidUpdate = (prevProps, prevState) =&gt;`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cwun→</code>\n            </td>\n            <td>\n              <code> {`componentWillUnmount = () =&gt;`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>gdsfp→</code>\n            </td>\n            <td>\n              <code>\n                {\" \"}\n                {`static getDerivedStateFromProps(nextProps, prevState)`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>gsbu→</code>\n            </td>\n            <td>\n              <code>\n                {\" \"}\n                {`getSnapshotBeforeUpdate = (prevProps, prevState) =&gt;`}\n              </code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>ren→</code>\n            </td>\n            <td>\n              <code>{`render() { return( ) }`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>sst→</code>\n            </td>\n            <td>\n              <code>{`this.setState({ })`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>ssf→</code>\n            </td>\n            <td>\n              <code>{`this.setState((state, props) =&gt; return { })`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>props→</code>\n            </td>\n            <td>\n              <code>{`this.props.propName`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>state→</code>\n            </td>\n            <td>\n              <code>{`this.state.stateName`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>rcontext→</code>\n            </td>\n            <td>\n              <code>{`const $ {1:contextName} = React.createContext()`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cref→</code>\n            </td>\n            <td>\n              <code>{`this.$ {1:refName}Ref = React.createRef()`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>fref→</code>\n            </td>\n            <td>\n              <code>{`const ref = React.createRef()`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>bnd→</code>\n            </td>\n            <td>\n              <code>{`this.methodName = this.methodName.bind(this)`}</code>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n      <h2>Console</h2>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Prefix</th>\n            <th>Method</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <code>clg→</code>\n            </td>\n            <td>\n              <code>{`console.log(object)`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>clo→</code>\n            </td>\n            <td>\n              <code>{`console.log(\"object\", object)`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>ctm→</code>\n            </td>\n            <td>\n              <code>{`console.time(\"timeId\")`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cte→</code>\n            </td>\n            <td>\n              <code>{`console.timeEnd(\"timeId\")`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cas→</code>\n            </td>\n            <td>\n              <code>{`console.assert(expression,object)`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>ccl→</code>\n            </td>\n            <td>\n              <code>{`console.clear()`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cco→</code>\n            </td>\n            <td>\n              <code>{`console.count(label)`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cdi→</code>\n            </td>\n            <td>\n              <code>{`console.dir`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cer→</code>\n            </td>\n            <td>\n              <code>{`console.error(object)`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cgr→</code>\n            </td>\n            <td>\n              <code>{`console.group(label)`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cge→</code>\n            </td>\n            <td>\n              <code>{`console.groupEnd()`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>ctr→</code>\n            </td>\n            <td>\n              <code>{`console.trace(object)`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cwa→</code>\n            </td>\n            <td>\n              <code>{`console.warn`}</code>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>cin→</code>\n            </td>\n            <td>\n              <code>{`console.info`}</code>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n",{"ruleId":"25","severity":1,"message":"26","line":18,"column":26,"nodeType":"27","endLine":18,"endColumn":41},{"ruleId":"25","severity":1,"message":"26","line":23,"column":26,"nodeType":"27","endLine":23,"endColumn":41},{"ruleId":"25","severity":1,"message":"26","line":32,"column":32,"nodeType":"27","endLine":32,"endColumn":47},{"ruleId":"25","severity":1,"message":"26","line":35,"column":32,"nodeType":"27","endLine":35,"endColumn":47},{"ruleId":"25","severity":1,"message":"26","line":38,"column":32,"nodeType":"27","endLine":38,"endColumn":47},{"ruleId":"28","severity":1,"message":"29","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":21},"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'reactSnippets' is defined but never used.","Identifier","unusedVar"]